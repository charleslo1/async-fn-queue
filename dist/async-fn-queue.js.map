{"version":3,"file":"async-fn-queue.js","sources":["../src/AsyncQueue.js","../src/main.js"],"sourcesContent":["/**\n * AsyncQueue 类\n */\nclass AsyncQueue {\n  /**\n   * 构造函数\n   * @param  {String} name 队列名\n   */\n  constructor (name = 'default') {\n    this.name = name        // 队列名称\n    this.canExec = false    // 是否可执行队列\n    this.runing = false     // 是否正在执行队列\n    this.asyncFns = []      // 待执行函数列表\n  }\n\n  /**\n   * 根据名称获取队列，不存在则创建\n   * @param  {String} name 队列名称\n   * @return {AsyncQueue}  队列对象\n   */\n  get (name) {\n    return AsyncQueue.get(name)\n  }\n\n  /**\n   * 添加异步操作函数\n   * @param {Function} fn 异步操作函数\n   * @return {Object}      this\n   */\n  push (fn) {\n    if (fn instanceof Function) {\n      this.asyncFns.push(fn)\n    } else {\n      throw new Error('队列只接受 Function 类型')\n    }\n    return this\n  }\n\n  /**\n   * 获取最前面的异步操作函数\n   * @return {Function}   异步操作函数\n   */\n  pop () {\n    return this.asyncFns.shift()\n  }\n\n  /**\n   * 按顺序执行异步操作队列\n   * @return {Object}      this\n   */\n  start () {\n    // 标记执行\n    this.asyncFns.forEach((fn) => {\n      fn.__exec = true\n    })\n    // 开始按顺序执行操作\n    this.canExec = true\n    this.__nextTick()\n    return this\n  }\n\n  /**\n   * 递归执行异步操作队列\n   */\n  __nextTick () {\n    if (!this.canExec || this.runing) return\n    if (this.asyncFns.length === 0) return this.pause()\n\n    let fn = this.asyncFns.shift()\n    if (!fn.__exec) {\n      this.asyncFns.unshift(fn)\n      return this.pause()\n    }\n\n    this.runing = true\n    let promise = fn()\n    let runNext = () => {\n      this.runing = false\n      this.__nextTick()\n    }\n    if (promise instanceof Promise) {\n      promise.then(runNext).catch(runNext)\n    } else {\n      runNext()\n    }\n  }\n\n  /**\n   * 停止执行\n   * @return {Object}      this\n   */\n  pause () {\n    this.canExec = false\n    this.runing = false\n    return this\n  }\n\n  /**\n   * 清除所有异步操作\n   * @return {Object}      this\n   */\n  stop () {\n    this.pause()\n    this.asyncFns = []\n    return this\n  }\n\n  /**\n   * 执行下一个异步操作\n   * @param  {Function} fn 异步操作函数\n   * @return {Object}      this\n   */\n  next (fn) {\n    return this.push(fn).start()\n  }\n\n  /**\n   * 根据名称获取队列，不存在则创建\n   * @param  {String} name 队列名称\n   * @return {AsyncQueue}  队列对象\n   */\n  static get (name = 'default') {\n    let queue = AsyncQueue.queues[name]\n    if (!queue) {\n      queue = new AsyncQueue(name)\n      AsyncQueue.queues[name] = queue\n    }\n    return queue\n  }\n}\n\n/**\n * 队列缓存\n * @type {Array}\n */\nAsyncQueue.queues = []\n\nexport default AsyncQueue\n","import AsyncQueue from './AsyncQueue'\n\nexport default AsyncQueue.get()\n"],"names":["AsyncQueue","name","canExec","runing","asyncFns","get","fn","Function","push","Error","shift","forEach","__exec","__nextTick","length","pause","unshift","promise","runNext","then","catch","start","queue","queues"],"mappings":";;;;;;;;;;AAAA;;;IAGMA;;;;;wBAK2B;QAAlBC,IAAkB,uEAAX,SAAW;;;;SACxBA,IAAL,GAAYA,IAAZ,CAD6B;SAExBC,OAAL,GAAe,KAAf,CAF6B;SAGxBC,MAAL,GAAc,KAAd,CAH6B;SAIxBC,QAAL,GAAgB,EAAhB,CAJ6B;;;;;;;;;;;;wBAY1BH,MAAM;aACFD,WAAWK,GAAX,CAAeJ,IAAf,CAAP;;;;;;;;;;;yBAQIK,IAAI;UACJA,cAAcC,QAAlB,EAA4B;aACrBH,QAAL,CAAcI,IAAd,CAAmBF,EAAnB;OADF,MAEO;cACC,IAAIG,KAAJ,CAAU,mBAAV,CAAN;;aAEK,IAAP;;;;;;;;;;0BAOK;aACE,KAAKL,QAAL,CAAcM,KAAd,EAAP;;;;;;;;;;4BAOO;;WAEFN,QAAL,CAAcO,OAAd,CAAsB,UAACL,EAAD,EAAQ;WACzBM,MAAH,GAAY,IAAZ;OADF;;WAIKV,OAAL,GAAe,IAAf;WACKW,UAAL;aACO,IAAP;;;;;;;;;iCAMY;;;UACR,CAAC,KAAKX,OAAN,IAAiB,KAAKC,MAA1B,EAAkC;UAC9B,KAAKC,QAAL,CAAcU,MAAd,KAAyB,CAA7B,EAAgC,OAAO,KAAKC,KAAL,EAAP;;UAE5BT,KAAK,KAAKF,QAAL,CAAcM,KAAd,EAAT;UACI,CAACJ,GAAGM,MAAR,EAAgB;aACTR,QAAL,CAAcY,OAAd,CAAsBV,EAAtB;eACO,KAAKS,KAAL,EAAP;;;WAGGZ,MAAL,GAAc,IAAd;UACIc,UAAUX,IAAd;UACIY,UAAU,SAAVA,OAAU,GAAM;cACbf,MAAL,GAAc,KAAd;cACKU,UAAL;OAFF;UAIII,2BAAJ,EAAgC;gBACtBE,IAAR,CAAaD,OAAb,EAAsBE,KAAtB,CAA4BF,OAA5B;OADF,MAEO;;;;;;;;;;;;4BASA;WACFhB,OAAL,GAAe,KAAf;WACKC,MAAL,GAAc,KAAd;aACO,IAAP;;;;;;;;;;2BAOM;WACDY,KAAL;WACKX,QAAL,GAAgB,EAAhB;aACO,IAAP;;;;;;;;;;;yBAQIE,IAAI;aACD,KAAKE,IAAL,CAAUF,EAAV,EAAce,KAAd,EAAP;;;;;;;;;;;0BAQ4B;UAAlBpB,IAAkB,uEAAX,SAAW;;UACxBqB,QAAQtB,WAAWuB,MAAX,CAAkBtB,IAAlB,CAAZ;UACI,CAACqB,KAAL,EAAY;gBACF,IAAItB,UAAJ,CAAeC,IAAf,CAAR;mBACWsB,MAAX,CAAkBtB,IAAlB,IAA0BqB,KAA1B;;aAEKA,KAAP;;;;;;;;;;;;;AAQJtB,WAAWuB,MAAX,GAAoB,EAApB;;ACrIA,cAAevB,WAAWK,GAAX,EAAf;;;;;;;;"}