{"version":3,"file":"async-fn-queue.js","sources":["../src/Queue.js","../src/QueueManager.js","../src/main.js"],"sourcesContent":["/**\n * Queue 类\n */\nclass Queue {\n  constructor (name) {\n    this.name = 'default'   // 队列名称\n    this.isExec = false     // 是否可执行队列\n    this.runing = false     // 是否正在执行队列\n    this.asyncFns = []      // 待执行函数列表\n  }\n\n  /**\n   * 添加异步操作函数\n   * @param {Function} fn 异步操作函数\n   * @return {Object}      this\n   */\n  push (fn) {\n    this.asyncFns.push(fn)\n    return this\n  }\n\n  /**\n   * 获取最前面的异步操作函数\n   * @return {Function}   异步操作函数\n   */\n  pop () {\n    return this.asyncFns.shift()\n  }\n\n  /**\n   * 按顺序执行异步操作队列\n   * @return {Object}      this\n   */\n  start () {\n    // 标记执行\n    this.asyncFns.forEach((fn) => {\n      fn.__exec = true\n    })\n    // 开始按顺序执行操作\n    this.isExec = true\n    this.__nextTick()\n    return this\n  }\n\n  /**\n   * 递归执行异步操作队列\n   */\n  __nextTick () {\n    if (!this.isExec || this.runing) return\n    if (this.asyncFns.length === 0) return this.pause()\n\n    let fn = this.asyncFns.shift()\n    if (!fn.__exec) {\n      this.asyncFns.unshift(fn)\n      return this.pause()\n    }\n\n    this.runing = true\n    if (fn instanceof Function) {\n      let promise = fn()\n      let runNext = () => {\n        this.runing = false\n        this.__nextTick()\n      }\n      if (promise instanceof Promise) {\n        promise.then(runNext).catch(runNext)\n      } else {\n        runNext()\n      }\n    }\n  }\n\n  /**\n   * 停止执行\n   * @return {Object}      this\n   */\n  pause () {\n    this.isExec = false\n    this.runing = false\n    return this\n  }\n\n  /**\n   * 清除所有异步操作\n   * @return {Object}      this\n   */\n  stop () {\n    this.pause()\n    this.asyncFns = []\n    return this\n  }\n\n  /**\n   * 执行下一个异步操作\n   * @param  {Function} fn 异步操作函数\n   * @return {Object}      this\n   */\n  next (fn) {\n    return this.push(fn).start()\n  }\n}\n\nexport default Queue\n","import Queue from './Queue'\n\n/**\n * QueueManager\n */\nclass QueueManager {\n  constructor () {\n    // 队列列表\n    this.queues = {}\n  }\n\n  /**\n   * 根据名称获取队列，不存在则创建\n   * @param  {String} name 队列名称\n   * @return {Queue}       队列对象\n   */\n  get (name) {\n    let queue = this.queues[name]\n    if (!queue) {\n      queue = new Queue(name)\n      this.queues[name] = queue\n    }\n    return queue\n  }\n}\n\nexport default QueueManager\n","import QueueManager from './QueueManager'\n\n// 实例化 queueManager\nconst queueManager = new QueueManager()\n\nexport default queueManager\n"],"names":["Queue","name","isExec","runing","asyncFns","fn","push","shift","forEach","__exec","__nextTick","length","pause","unshift","Function","promise","runNext","then","catch","start","QueueManager","queues","queue","queueManager"],"mappings":";;;;;;;;;;AAAA;;;IAGMA;iBACSC,IAAb,EAAmB;;;SACZA,IAAL,GAAY,SAAZ,CADiB;SAEZC,MAAL,GAAc,KAAd,CAFiB;SAGZC,MAAL,GAAc,KAAd,CAHiB;SAIZC,QAAL,GAAgB,EAAhB,CAJiB;;;;;;;;;;;;yBAYbC,IAAI;WACHD,QAAL,CAAcE,IAAd,CAAmBD,EAAnB;aACO,IAAP;;;;;;;;;;0BAOK;aACE,KAAKD,QAAL,CAAcG,KAAd,EAAP;;;;;;;;;;4BAOO;;WAEFH,QAAL,CAAcI,OAAd,CAAsB,UAACH,EAAD,EAAQ;WACzBI,MAAH,GAAY,IAAZ;OADF;;WAIKP,MAAL,GAAc,IAAd;WACKQ,UAAL;aACO,IAAP;;;;;;;;;iCAMY;;;UACR,CAAC,KAAKR,MAAN,IAAgB,KAAKC,MAAzB,EAAiC;UAC7B,KAAKC,QAAL,CAAcO,MAAd,KAAyB,CAA7B,EAAgC,OAAO,KAAKC,KAAL,EAAP;;UAE5BP,KAAK,KAAKD,QAAL,CAAcG,KAAd,EAAT;UACI,CAACF,GAAGI,MAAR,EAAgB;aACTL,QAAL,CAAcS,OAAd,CAAsBR,EAAtB;eACO,KAAKO,KAAL,EAAP;;;WAGGT,MAAL,GAAc,IAAd;UACIE,cAAcS,QAAlB,EAA4B;YACtBC,UAAUV,IAAd;YACIW,UAAU,SAAVA,OAAU,GAAM;gBACbb,MAAL,GAAc,KAAd;gBACKO,UAAL;SAFF;YAIIK,2BAAJ,EAAgC;kBACtBE,IAAR,CAAaD,OAAb,EAAsBE,KAAtB,CAA4BF,OAA5B;SADF,MAEO;;;;;;;;;;;;;4BAUF;WACFd,MAAL,GAAc,KAAd;WACKC,MAAL,GAAc,KAAd;aACO,IAAP;;;;;;;;;;2BAOM;WACDS,KAAL;WACKR,QAAL,GAAgB,EAAhB;aACO,IAAP;;;;;;;;;;;yBAQIC,IAAI;aACD,KAAKC,IAAL,CAAUD,EAAV,EAAcc,KAAd,EAAP;;;;;;;AChGJ;;;;IAGMC;0BACW;;;;SAERC,MAAL,GAAc,EAAd;;;;;;;;;;;;wBAQGpB,MAAM;UACLqB,QAAQ,KAAKD,MAAL,CAAYpB,IAAZ,CAAZ;UACI,CAACqB,KAAL,EAAY;gBACF,IAAItB,KAAJ,CAAUC,IAAV,CAAR;aACKoB,MAAL,CAAYpB,IAAZ,IAAoBqB,KAApB;;aAEKA,KAAP;;;;;;;ACpBJ;AACA,IAAMC,iBAAe,IAAIH,YAAJ,EAArB;;;;;;;;"}